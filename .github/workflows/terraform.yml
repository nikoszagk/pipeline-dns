name: Terraform DNS

on:
  pull_request:
  push:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

env:
  ARM_USE_OIDC: true
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  TF_INPUT: false
  TF_VAR_app_ip: ${{ secrets.TF_VAR_APP_IP }}
  TF_VAR_app_cname: ${{ secrets.TF_VAR_APP_CNAME }}
  TF_VAR_app_txt: ${{ secrets.TF_VAR_APP_TXT }}
  TF_VAR_subscription_id: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
  TF_VAR_dns_rg_name: ${{ secrets.TF_VAR_DNS_RG_NAME }}
  TF_VAR_location: ${{ secrets.TF_VAR_LOCATION }}
  TF_VAR_zone_name: ${{ secrets.TF_VAR_ZONE_NAME }}
  TF_VAR_storage_account_name: ${{ secrets.TF_VAR_STORAGE_ACCOUNT_NAME }}


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Azure login (OIDC)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Terraform init
        run: terraform init -upgrade

      - name: Terraform fmt & validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform plan
        run: terraform plan -no-color

      - name: Terraform apply (main only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -no-color
